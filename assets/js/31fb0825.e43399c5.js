"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[9709],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},43127:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>b,frontMatter:()=>d,metadata:()=>u,toc:()=>f});var r=n(87462),a=(n(67294),n(3905));const i='import Alert from \'react-bootstrap/Alert\';\n\nfunction AdditionalContentExample() {\n  return (\n    <Alert variant="success">\n      <Alert.Heading>Hey, nice to see you</Alert.Heading>\n      <p>\n        Aww yeah, you successfully read this important alert message. This\n        example text is going to run a bit longer so that you can see how\n        spacing within an alert works with this kind of content.\n      </p>\n      <hr />\n      <p className="mb-0">\n        Whenever you need to, be sure to use margin utilities to keep things\n        nice and tidy.\n      </p>\n    </Alert>\n  );\n}\n\nexport default AdditionalContentExample;\n',o="import Alert from 'react-bootstrap/Alert';\n\nfunction BasicExample() {\n  return (\n    <>\n      {[\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n      ].map((variant) => (\n        <Alert key={variant} variant={variant}>\n          This is a {variant} alert\u2014check it out!\n        </Alert>\n      ))}\n    </>\n  );\n}\n\nexport default BasicExample;\n",l="import { useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\n\nfunction AlertDismissibleExample() {\n  const [show, setShow] = useState(true);\n\n  if (show) {\n    return (\n      <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n        <p>\n          Change this and that and try again. Duis mollis, est non commodo\n          luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\n          Cras mattis consectetur purus sit amet fermentum.\n        </p>\n      </Alert>\n    );\n  }\n  return <Button onClick={() => setShow(true)}>Show Alert</Button>;\n}\n\nexport default AlertDismissibleExample;\n";var s=n(35578);const c="import Alert from 'react-bootstrap/Alert';\n\nfunction LinksExample() {\n  return (\n    <>\n      {[\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n      ].map((variant) => (\n        <Alert key={variant} variant={variant}>\n          This is a {variant} alert with{' '}\n          <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a click if\n          you like.\n        </Alert>\n      ))}\n    </>\n  );\n}\n\nexport default LinksExample;\n",d={title:"Alerts",description:"Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages."},p=void 0,u={unversionedId:"components/alerts",id:"components/alerts",title:"Alerts",description:"Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.",source:"@site/docs/components/alerts.mdx",sourceDirName:"components",slug:"/components/alerts",permalink:"/docs/components/alerts",draft:!1,tags:[],version:"current",frontMatter:{title:"Alerts",description:"Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages."},sidebar:"sidebar",previous:{title:"Accordion",permalink:"/docs/components/accordion"},next:{title:"Badges",permalink:"/docs/components/badge"}},m={},f=[{value:"Examples",id:"examples",level:2},{value:"Links",id:"links",level:3},{value:"Additional content",id:"additional-content",level:3},{value:"Dismissing",id:"dismissing",level:3},{value:"API",id:"api",level:2},{value:"Alert",id:"alert",level:3},{value:"AlertHeading",id:"alertheading",level:3},{value:"AlertLink",id:"alertlink",level:3}],h=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},g=h("CodeBlock"),v=h("PropsTable"),k={toc:f},y="wrapper";function b(e){let{components:t,...n}=e;return(0,a.kt)(y,(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"Alerts are available for any length of text, as well as an optional\ndismiss button. For proper styling, use one of the eight ",(0,a.kt)("inlineCode",{parentName:"p"},"variant"),"s."),(0,a.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},o),(0,a.kt)("admonition",{title:"Conveying meaning to assistive technologies",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Using color to add meaning only provides a visual indication, which will not\nbe conveyed to users of assistive technologies \u2013 such as screen readers.\nEnsure that information denoted by the color is either obvious from the\ncontent itself (e.g. the visible text), or is included through alternative\nmeans, such as additional text hidden with the ",(0,a.kt)("inlineCode",{parentName:"p"},".visually-hidden"),"\nclass.")),(0,a.kt)("h3",{id:"links"},"Links"),(0,a.kt)("p",null,"For links, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"<Alert.Link>")," component to provide matching\ncolored links within any alert."),(0,a.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},c),(0,a.kt)("h3",{id:"additional-content"},"Additional content"),(0,a.kt)("p",null,"Alerts can contain whatever content you like. Headers, paragraphs, dividers, go crazy."),(0,a.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},i),(0,a.kt)("h3",{id:"dismissing"},"Dismissing"),(0,a.kt)("p",null,"Add the ",(0,a.kt)("inlineCode",{parentName:"p"},"dismissible")," prop to add a functioning dismiss\nbutton to the Alert."),(0,a.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},l),(0,a.kt)("p",null,"You can also control the visual state directly which is great if you\nwant to build more complicated alerts."),(0,a.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},s.Z),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"alert"},"Alert"),(0,a.kt)(v,{name:"Alert",mdxType:"PropsTable"}),(0,a.kt)("h3",{id:"alertheading"},"AlertHeading"),(0,a.kt)(v,{name:"AlertHeading",mdxType:"PropsTable"}),(0,a.kt)("h3",{id:"alertlink"},"AlertLink"),(0,a.kt)(v,{name:"AlertLink",mdxType:"PropsTable"}))}b.isMDXComponent=!0},35578:(e,t,n)=>{n.d(t,{Z:()=>r});const r="import { useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\n\nfunction AlertDismissible() {\n  const [show, setShow] = useState(true);\n\n  return (\n    <>\n      <Alert show={show} variant=\"success\">\n        <Alert.Heading>My Alert</Alert.Heading>\n        <p>\n          Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget\n          lacinia odio sem nec elit. Cras mattis consectetur purus sit amet\n          fermentum.\n        </p>\n        <hr />\n        <div className=\"d-flex justify-content-end\">\n          <Button onClick={() => setShow(false)} variant=\"outline-success\">\n            Close me\n          </Button>\n        </div>\n      </Alert>\n\n      {!show && <Button onClick={() => setShow(true)}>Show Alert</Button>}\n    </>\n  );\n}\n\nexport default AlertDismissible;\n"}}]);