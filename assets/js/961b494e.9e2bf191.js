"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[8800],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>h});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(t),u=o,h=d["".concat(c,".").concat(u)]||d[u]||m[u]||a;return t?r.createElement(h,i(i({ref:n},s),{},{components:t})):r.createElement(h,i({ref:n},s))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5555:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>m,default:()=>g,frontMatter:()=>d,metadata:()=>u,toc:()=>k});var r=t(87462),o=(t(67294),t(3905));const a="import Form from 'react-bootstrap/Form';\n\nfunction CheckExample() {\n  return (\n    <Form>\n      {['checkbox', 'radio'].map((type) => (\n        <div key={`default-${type}`} className=\"mb-3\">\n          <Form.Check // prettier-ignore\n            type={type}\n            id={`default-${type}`}\n            label={`default ${type}`}\n          />\n\n          <Form.Check\n            disabled\n            type={type}\n            label={`disabled ${type}`}\n            id={`disabled-default-${type}`}\n          />\n        </div>\n      ))}\n    </Form>\n  );\n}\n\nexport default CheckExample;\n",i="import Form from 'react-bootstrap/Form';\n\nfunction CheckApiExample() {\n  return (\n    <Form>\n      {['checkbox', 'radio'].map((type) => (\n        <div key={type} className=\"mb-3\">\n          <Form.Check type={type} id={`check-api-${type}`}>\n            <Form.Check.Input type={type} isValid />\n            <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>\n            <Form.Control.Feedback type=\"valid\">\n              You did it!\n            </Form.Control.Feedback>\n          </Form.Check>\n        </div>\n      ))}\n    </Form>\n  );\n}\n\nexport default CheckApiExample;\n",l='import Form from \'react-bootstrap/Form\';\n\nfunction CheckInlineExample() {\n  return (\n    <Form>\n      {[\'checkbox\', \'radio\'].map((type) => (\n        <div key={`inline-${type}`} className="mb-3">\n          <Form.Check\n            inline\n            label="1"\n            name="group1"\n            type={type}\n            id={`inline-${type}-1`}\n          />\n          <Form.Check\n            inline\n            label="2"\n            name="group1"\n            type={type}\n            id={`inline-${type}-2`}\n          />\n          <Form.Check\n            inline\n            disabled\n            label="3 (disabled)"\n            type={type}\n            id={`inline-${type}-3`}\n          />\n        </div>\n      ))}\n    </Form>\n  );\n}\n\nexport default CheckInlineExample;\n',c='import Form from \'react-bootstrap/Form\';\n\nfunction CheckReverseExample() {\n  return (\n    <Form>\n      {[\'checkbox\', \'radio\'].map((type) => (\n        <div key={`reverse-${type}`} className="mb-3">\n          <Form.Check\n            reverse\n            label="1"\n            name="group1"\n            type={type}\n            id={`reverse-${type}-1`}\n          />\n          <Form.Check\n            reverse\n            label="2"\n            name="group1"\n            type={type}\n            id={`reverse-${type}-2`}\n          />\n          <Form.Check\n            reverse\n            disabled\n            label="3 (disabled)"\n            type={type}\n            id={`reverse-${type}-3`}\n          />\n        </div>\n      ))}\n    </Form>\n  );\n}\n\nexport default CheckReverseExample;\n',p='import Form from \'react-bootstrap/Form\';\n\nfunction NoLabelExample() {\n  return (\n    <>\n      <Form.Check aria-label="option 1" />\n      <Form.Check type="radio" aria-label="radio 1" />\n    </>\n  );\n}\n\nexport default NoLabelExample;\n',s='import Form from \'react-bootstrap/Form\';\n\nfunction SwitchExample() {\n  return (\n    <Form>\n      <Form.Check // prettier-ignore\n        type="switch"\n        id="custom-switch"\n        label="Check this switch"\n      />\n      <Form.Check // prettier-ignore\n        disabled\n        type="switch"\n        label="disabled switch"\n        id="disabled-custom-switch"\n      />\n    </Form>\n  );\n}\n\nexport default SwitchExample;\n',d={title:"Checks and radios",description:"Create consistent cross-browser and cross-device checkboxes and radios with our completely rewritten checks component.",sidebar_position:5},m=void 0,u={unversionedId:"forms/checks-radios",id:"forms/checks-radios",title:"Checks and radios",description:"Create consistent cross-browser and cross-device checkboxes and radios with our completely rewritten checks component.",source:"@site/docs/forms/checks-radios.mdx",sourceDirName:"forms",slug:"/forms/checks-radios",permalink:"/docs/forms/checks-radios",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Checks and radios",description:"Create consistent cross-browser and cross-device checkboxes and radios with our completely rewritten checks component.",sidebar_position:5},sidebar:"sidebar",previous:{title:"Select",permalink:"/docs/forms/select"},next:{title:"Range",permalink:"/docs/forms/range"}},h={},k=[{value:"Default (stacked)",id:"default-stacked",level:2},{value:"Switches",id:"switches",level:2},{value:"Inline",id:"inline",level:2},{value:"Reverse",id:"reverse",level:2},{value:"Without labels",id:"without-labels",level:2},{value:"Customizing FormCheck rendering",id:"customizing-formcheck-rendering",level:2},{value:"API",id:"api",level:2},{value:"FormCheck",id:"formcheck",level:3},{value:"FormCheckInput",id:"formcheckinput",level:3},{value:"FormCheckLabel",id:"formchecklabel",level:3}],b=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",n)},y=b("CodeBlock"),f=b("PropsTable"),v={toc:k},C="wrapper";function g(e){let{components:n,...t}=e;return(0,o.kt)(C,(0,r.Z)({},v,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"For the non-textual checkbox and radio controls, ",(0,o.kt)("inlineCode",{parentName:"p"},"FormCheck"),"\nprovides a single component for both types that adds some additional\nstyling and improved layout."),(0,o.kt)("h2",{id:"default-stacked"},"Default (stacked)"),(0,o.kt)("p",null,"By default, any number of checkboxes and radios that are immediate\nsibling will be vertically stacked and appropriately spaced with\nFormCheck."),(0,o.kt)(y,{language:"jsx",live:!0,mdxType:"CodeBlock"},a),(0,o.kt)("h2",{id:"switches"},"Switches"),(0,o.kt)("p",null,"A switch has the markup of a custom checkbox but uses ",(0,o.kt)("inlineCode",{parentName:"p"},'type="switch"'),"\nto render a toggle switch. Switches also support the same customizable\nchildren as ",(0,o.kt)("inlineCode",{parentName:"p"},"<FormCheck>"),"."),(0,o.kt)(y,{language:"jsx",live:!0,mdxType:"CodeBlock"},s),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can also use the ",(0,o.kt)("inlineCode",{parentName:"p"},"<Form.Switch>")," alias which encapsulates\nthe above, in a very small component wrapper.")),(0,o.kt)("h2",{id:"inline"},"Inline"),(0,o.kt)("p",null,"Group checkboxes or radios on the same horizontal row by adding the ",(0,o.kt)("inlineCode",{parentName:"p"},"inline")," prop."),(0,o.kt)(y,{language:"jsx",live:!0,mdxType:"CodeBlock"},l),(0,o.kt)("h2",{id:"reverse"},"Reverse"),(0,o.kt)("p",null,"Put your checkboxes, radios, and switches on the opposite side with the ",(0,o.kt)("inlineCode",{parentName:"p"},"reverse")," prop."),(0,o.kt)(y,{language:"jsx",live:!0,mdxType:"CodeBlock"},c),(0,o.kt)("h2",{id:"without-labels"},"Without labels"),(0,o.kt)("p",null,"When you render a FormCheck without a label (no ",(0,o.kt)("inlineCode",{parentName:"p"},"children"),")\nsome additional styling is applied to keep the inputs from collapsing."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Remember to add an ",(0,o.kt)("inlineCode",{parentName:"strong"},"aria-label")," when omitting labels!")),(0,o.kt)(y,{language:"jsx",live:!0,mdxType:"CodeBlock"},p),(0,o.kt)("h2",{id:"customizing-formcheck-rendering"},"Customizing FormCheck rendering"),(0,o.kt)("p",null,"When you need tighter control, or want to customize how the ",(0,o.kt)("inlineCode",{parentName:"p"},"FormCheck")," component\nrenders, it may better to use its constituent parts directly."),(0,o.kt)("p",null,"By provided ",(0,o.kt)("inlineCode",{parentName:"p"},"children")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"FormCheck")," you can forgo the default rendering and\nhandle it yourself. (You can still provide an ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"FormCheck")," or\n",(0,o.kt)("inlineCode",{parentName:"p"},"FormGroup")," and have it propagate to the label and input)."),(0,o.kt)(y,{language:"jsx",live:!0,mdxType:"CodeBlock"},i),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("h3",{id:"formcheck"},"FormCheck"),(0,o.kt)(f,{name:"FormCheck",mdxType:"PropsTable"}),(0,o.kt)("h3",{id:"formcheckinput"},"FormCheckInput"),(0,o.kt)(f,{name:"FormCheckInput",mdxType:"PropsTable"}),(0,o.kt)("h3",{id:"formchecklabel"},"FormCheckLabel"),(0,o.kt)(f,{name:"FormCheckLabel",mdxType:"PropsTable"}))}g.isMDXComponent=!0}}]);