"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[8225],{18225:e=>{e.exports=JSON.parse('{"description":"","props":{"children":{"type":{"name":"union","value":[{"name":"element"},{"name":"func"}]},"required":true,"description":"","tsType":{"name":"union","raw":"| React.ReactElement\\n| ((props: OverlayTriggerRenderProps) => React.ReactNode)","elements":[{"name":"ReactReactElement","raw":"React.ReactElement"},{"name":"unknown"}]},"doclets":{}},"trigger":{"type":{"name":"union","value":[{"name":"custom","raw":"triggerType.isRequired"},{"name":"arrayOf","value":{"name":"custom","raw":"triggerType.isRequired"}}]},"required":false,"description":"Specify which action or actions trigger Overlay visibility\\n\\nThe `click` trigger ignores the configured `delay`.","tsType":{"name":"union","raw":"OverlayTriggerType | OverlayTriggerType[]","elements":[{"name":"union","raw":"\'hover\' | \'click\' | \'focus\'","elements":[{"name":"literal","value":"\'hover\'"},{"name":"literal","value":"\'click\'"},{"name":"literal","value":"\'focus\'"}]},{"name":"Array","elements":[{"name":"union","raw":"\'hover\' | \'click\' | \'focus\'","elements":[{"name":"literal","value":"\'hover\'"},{"name":"literal","value":"\'click\'"},{"name":"literal","value":"\'focus\'"}]}],"raw":"OverlayTriggerType[]"}]},"defaultValue":{"value":"[\'hover\', \'focus\']","computed":false},"doclets":{"type":"{\'hover\' | \'click\' |\'focus\' | Array<\'hover\' | \'click\' |\'focus\'>}"}},"delay":{"type":{"name":"union","value":[{"name":"number"},{"name":"shape","value":{"show":{"name":"number","required":true},"hide":{"name":"number","required":true}}}]},"required":false,"description":"A millisecond delay amount to show and hide the Overlay once triggered","tsType":{"name":"union","raw":"number | { show: number; hide: number }","elements":[{"name":"number"},{"name":"signature","type":"object","raw":"{ show: number; hide: number }","signature":{"properties":[{"key":"show","value":{"name":"number","required":true}},{"key":"hide","value":{"name":"number","required":true}}]}}]},"doclets":{}},"show":{"type":{"name":"bool"},"required":false,"description":"The visibility of the Overlay. `show` is a _controlled_ prop so should be paired\\nwith `onToggle` to avoid breaking user interactions.\\n\\nManually toggling `show` does **not** wait for `delay` to change the visibility.","tsType":{"name":"boolean"},"doclets":{"controllable":"onToggle"}},"defaultShow":{"type":{"name":"bool"},"required":false,"description":"The initial visibility state of the Overlay.","tsType":{"name":"boolean"},"defaultValue":{"value":"false","computed":false},"doclets":{}},"onToggle":{"type":{"name":"func"},"required":false,"description":"A callback that fires when the user triggers a change in tooltip visibility.\\n\\n`onToggle` is called with the desired next `show`, and generally should be passed\\nback to the `show` prop. `onToggle` fires _after_ the configured `delay`","tsType":{"name":"signature","type":"function","raw":"(nextShow: boolean) => void","signature":{"arguments":[{"name":"nextShow","type":{"name":"boolean"}}],"return":{"name":"void"}}},"doclets":{"controllable":"`show`"}},"flip":{"type":{"name":"bool"},"required":false,"description":"The initial flip state of the Overlay.","tsType":{"name":"boolean"},"defaultValue":{"value":"placement && placement.indexOf(\'auto\') !== -1","computed":false},"doclets":{}},"overlay":{"type":{"name":"union","value":[{"name":"func"},{"name":"element"}]},"required":true,"description":"An element or text to overlay next to the target.","tsType":{"name":"OverlayChildren"},"doclets":{}},"popperConfig":{"type":{"name":"object"},"required":false,"description":"A Popper.js config object passed to the underlying popper instance.","defaultValue":{"value":"{}","computed":false},"doclets":{}},"target":{"type":{"name":"enum","value":[{"value":"null","computed":false}]},"required":false,"description":"","tsType":{"name":"never"},"doclets":{"private":true}},"onHide":{"type":{"name":"enum","value":[{"value":"null","computed":false}]},"required":false,"description":"","tsType":{"name":"never"},"doclets":{"private":true}},"placement":{"type":{"name":"enum","value":[{"value":"\'auto-start\'","computed":false},{"value":"\'auto\'","computed":false},{"value":"\'auto-end\'","computed":false},{"value":"\'top-start\'","computed":false},{"value":"\'top\'","computed":false},{"value":"\'top-end\'","computed":false},{"value":"\'right-start\'","computed":false},{"value":"\'right\'","computed":false},{"value":"\'right-end\'","computed":false},{"value":"\'bottom-end\'","computed":false},{"value":"\'bottom\'","computed":false},{"value":"\'bottom-start\'","computed":false},{"value":"\'left-end\'","computed":false},{"value":"\'left\'","computed":false},{"value":"\'left-start\'","computed":false}]},"required":false,"description":"The placement of the Overlay in relation to it\'s `target`.","tsType":{"name":"Placement"},"doclets":{}}}}')}}]);