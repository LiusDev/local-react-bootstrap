"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[6778],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>b});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,b=c["".concat(s,".").concat(d)]||c[d]||u[d]||l;return n?o.createElement(b,r(r({ref:t},m),{},{components:n})):o.createElement(b,r({ref:t},m))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,r[1]=i;for(var p=2;p<l;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},28783:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>v,frontMatter:()=>m,metadata:()=>u,toc:()=>b});var o=n(87462),a=(n(67294),n(3905));const l='import FloatingLabel from \'react-bootstrap/FloatingLabel\';\nimport Form from \'react-bootstrap/Form\';\n\nfunction FormFloatingBasicExample() {\n  return (\n    <>\n      <FloatingLabel\n        controlId="floatingInput"\n        label="Email address"\n        className="mb-3"\n      >\n        <Form.Control type="email" placeholder="name@example.com" />\n      </FloatingLabel>\n      <FloatingLabel controlId="floatingPassword" label="Password">\n        <Form.Control type="password" placeholder="Password" />\n      </FloatingLabel>\n    </>\n  );\n}\n\nexport default FormFloatingBasicExample;\n',r='import Form from \'react-bootstrap/Form\';\n\nfunction FormFloatingCustom() {\n  return (\n    <>\n      <Form.Floating className="mb-3">\n        <Form.Control\n          id="floatingInputCustom"\n          type="email"\n          placeholder="name@example.com"\n        />\n        <label htmlFor="floatingInputCustom">Email address</label>\n      </Form.Floating>\n      <Form.Floating>\n        <Form.Control\n          id="floatingPasswordCustom"\n          type="password"\n          placeholder="Password"\n        />\n        <label htmlFor="floatingPasswordCustom">Password</label>\n      </Form.Floating>\n    </>\n  );\n}\n\nexport default FormFloatingCustom;\n',i='import Col from \'react-bootstrap/Col\';\nimport FloatingLabel from \'react-bootstrap/FloatingLabel\';\nimport Form from \'react-bootstrap/Form\';\nimport Row from \'react-bootstrap/Row\';\n\nfunction FormFloatingLayoutExample() {\n  return (\n    <Row className="g-2">\n      <Col md>\n        <FloatingLabel controlId="floatingInputGrid" label="Email address">\n          <Form.Control type="email" placeholder="name@example.com" />\n        </FloatingLabel>\n      </Col>\n      <Col md>\n        <FloatingLabel\n          controlId="floatingSelectGrid"\n          label="Works with selects"\n        >\n          <Form.Select aria-label="Floating label select example">\n            <option>Open this select menu</option>\n            <option value="1">One</option>\n            <option value="2">Two</option>\n            <option value="3">Three</option>\n          </Form.Select>\n        </FloatingLabel>\n      </Col>\n    </Row>\n  );\n}\n\nexport default FormFloatingLayoutExample;\n',s='import FloatingLabel from \'react-bootstrap/FloatingLabel\';\nimport Form from \'react-bootstrap/Form\';\n\nfunction FormFloatingSelectExample() {\n  return (\n    <FloatingLabel controlId="floatingSelect" label="Works with selects">\n      <Form.Select aria-label="Floating label select example">\n        <option>Open this select menu</option>\n        <option value="1">One</option>\n        <option value="2">Two</option>\n        <option value="3">Three</option>\n      </Form.Select>\n    </FloatingLabel>\n  );\n}\n\nexport default FormFloatingSelectExample;\n',p='import FloatingLabel from \'react-bootstrap/FloatingLabel\';\nimport Form from \'react-bootstrap/Form\';\n\nfunction FormFloatingTextareaExample() {\n  return (\n    <>\n      <FloatingLabel\n        controlId="floatingTextarea"\n        label="Comments"\n        className="mb-3"\n      >\n        <Form.Control as="textarea" placeholder="Leave a comment here" />\n      </FloatingLabel>\n      <FloatingLabel controlId="floatingTextarea2" label="Comments">\n        <Form.Control\n          as="textarea"\n          placeholder="Leave a comment here"\n          style={{ height: \'100px\' }}\n        />\n      </FloatingLabel>\n    </>\n  );\n}\n\nexport default FormFloatingTextareaExample;\n',m={title:"Floating labels",description:"Create beautifully simple form labels that float over your input fields.",sidebar_position:8},c=void 0,u={unversionedId:"forms/floating-labels",id:"forms/floating-labels",title:"Floating labels",description:"Create beautifully simple form labels that float over your input fields.",source:"@site/docs/forms/floating-labels.mdx",sourceDirName:"forms",slug:"/forms/floating-labels",permalink:"/docs/forms/floating-labels",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Floating labels",description:"Create beautifully simple form labels that float over your input fields.",sidebar_position:8},sidebar:"sidebar",previous:{title:"Input Group",permalink:"/docs/forms/input-group"},next:{title:"Layout",permalink:"/docs/forms/layout"}},d={},b=[{value:"Example",id:"example",level:2},{value:"Textareas",id:"textareas",level:2},{value:"Selects",id:"selects",level:2},{value:"Layout",id:"layout",level:2},{value:"Customizing rendering",id:"customizing-rendering",level:2},{value:"API",id:"api",level:2},{value:"FormFloating",id:"formfloating",level:3},{value:"FloatingLabel",id:"floatinglabel",level:3}],g=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},f=g("CodeBlock"),F=g("PropsTable"),y={toc:b},h="wrapper";function v(e){let{components:t,...n}=e;return(0,a.kt)(h,(0,o.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"Wrap a ",(0,a.kt)("inlineCode",{parentName:"p"},"<Form.Control>")," element in ",(0,a.kt)("inlineCode",{parentName:"p"},"<FloatingLabel>")," to enable floating labels with\nBootstrap\u2019s textual form fields. A ",(0,a.kt)("inlineCode",{parentName:"p"},"placeholder")," is required\non each ",(0,a.kt)("inlineCode",{parentName:"p"},"<Form.Control>")," as our method of CSS-only\nfloating labels uses the ",(0,a.kt)("inlineCode",{parentName:"p"},":placeholder-shown")," pseudo-element."),(0,a.kt)(f,{language:"jsx",live:!0,mdxType:"CodeBlock"},l),(0,a.kt)("h2",{id:"textareas"},"Textareas"),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},"<textarea>"),"s will be the same height as ",(0,a.kt)("inlineCode",{parentName:"p"},"<input>"),"s. To set a custom\nheight on your ",(0,a.kt)("inlineCode",{parentName:"p"},"<textarea>"),", do not use the ",(0,a.kt)("inlineCode",{parentName:"p"},"rows")," attribute. Instead, set an\nexplicit ",(0,a.kt)("inlineCode",{parentName:"p"},"height")," (either inline or via custom CSS)."),(0,a.kt)(f,{language:"jsx",live:!0,mdxType:"CodeBlock"},p),(0,a.kt)("h2",{id:"selects"},"Selects"),(0,a.kt)("p",null,"Other than ",(0,a.kt)("inlineCode",{parentName:"p"},"<Form.Control>"),", floating labels are only available on ",(0,a.kt)("inlineCode",{parentName:"p"},"<Form.Select>"),"s.\nThey work in the same way, but unlike ",(0,a.kt)("inlineCode",{parentName:"p"},"<input>"),"s, they\u2019ll always show the ",(0,a.kt)("inlineCode",{parentName:"p"},"<label>"),"\nin its floated state."),(0,a.kt)(f,{language:"jsx",live:!0,mdxType:"CodeBlock"},s),(0,a.kt)("h2",{id:"layout"},"Layout"),(0,a.kt)("p",null,"When working with the Bootstrap grid system, be sure to place form\nelements within column classes."),(0,a.kt)(f,{language:"jsx",live:!0,mdxType:"CodeBlock"},i),(0,a.kt)("h2",{id:"customizing-rendering"},"Customizing rendering"),(0,a.kt)("p",null,"If you need greater control over the rendering, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"<FormFloating>")," component\nto wrap your input and label. Also note that the ",(0,a.kt)("inlineCode",{parentName:"p"},"<Form.Control>")," must come first\nso we can utilize a sibling selector (e.g., ~)."),(0,a.kt)(f,{language:"jsx",live:!0,mdxType:"CodeBlock"},r),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"formfloating"},"FormFloating"),(0,a.kt)(F,{name:"FormFloating",mdxType:"PropsTable"}),(0,a.kt)("h3",{id:"floatinglabel"},"FloatingLabel"),(0,a.kt)(F,{name:"FloatingLabel",mdxType:"PropsTable"}))}v.isMDXComponent=!0}}]);