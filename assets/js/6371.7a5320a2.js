"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[6371],{66371:e=>{e.exports=JSON.parse('{"description":"","props":{"bsPrefix":{"type":{"name":"string"},"required":false,"description":"","doclets":{"default":"\'form-check\'"}},"bsSwitchPrefix":{"type":{"name":"string"},"required":false,"description":"bsPrefix override for the base switch class.","doclets":{"default":"\'form-switch\'"}},"_ref":{"type":{"name":"any"},"required":false,"description":"The FormCheck `ref` will be forwarded to the underlying input element,\\nwhich means it will be a DOM node, when resolved.","doclets":{"type":"{ReactRef}","alias":"ref"}},"as":{"type":{"name":"elementType"},"required":false,"description":"The underlying HTML element to use when rendering the FormCheck.","defaultValue":{"value":"\'input\'","computed":false},"doclets":{"type":"{(\'input\'|elementType)}"}},"id":{"type":{"name":"string"},"required":false,"description":"A HTML id attribute, necessary for proper form accessibility.\\nAn id is recommended for allowing label clicks to toggle the check control.\\n\\nThis is **required** when `type=\\"switch\\"` due to how they are rendered.","doclets":{}},"children":{"type":{"name":"node"},"required":false,"description":"Provide a function child to manually handle the layout of the FormCheck\'s inner components.\\n\\n```jsx\\n<FormCheck>\\n  <FormCheck.Input isInvalid type={radio} />\\n  <FormCheck.Label>Allow us to contact you?</FormCheck.Label>\\n  <Feedback type=\\"invalid\\">Yo this is required</Feedback>\\n</FormCheck>\\n```","doclets":{}},"inline":{"type":{"name":"bool"},"required":false,"description":"Groups controls horizontally with other `FormCheck`s.","defaultValue":{"value":"false","computed":false},"doclets":{}},"reverse":{"type":{"name":"bool"},"required":false,"description":"Put your checkboxes, radios, and switches on the opposite side.","defaultValue":{"value":"false","computed":false},"doclets":{}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disables the control.","defaultValue":{"value":"false","computed":false},"doclets":{}},"title":{"type":{"name":"string"},"required":false,"description":"`title` attribute for the underlying `FormCheckLabel`.","defaultValue":{"value":"\'\'","computed":false},"doclets":{}},"label":{"type":{"name":"node"},"required":false,"description":"Label for the control.","doclets":{}},"type":{"type":{"name":"enum","value":[{"value":"\'radio\'","computed":false},{"value":"\'checkbox\'","computed":false},{"value":"\'switch\'","computed":false}]},"required":false,"description":"The type of checkable.","defaultValue":{"value":"\'checkbox\'","computed":false},"doclets":{"type":"{(\'radio\' | \'checkbox\' | \'switch\')}"}},"isValid":{"type":{"name":"bool"},"required":false,"description":"Manually style the input as valid","defaultValue":{"value":"false","computed":false},"doclets":{}},"isInvalid":{"type":{"name":"bool"},"required":false,"description":"Manually style the input as invalid","defaultValue":{"value":"false","computed":false},"doclets":{}},"feedbackTooltip":{"type":{"name":"bool"},"required":false,"description":"Display feedback as a tooltip.","defaultValue":{"value":"false","computed":false},"doclets":{}},"feedback":{"type":{"name":"node"},"required":false,"description":"A message to display when the input is in a validation state","doclets":{}},"feedbackType":{"type":{"name":"enum","value":[{"value":"\'valid\'","computed":false},{"value":"\'invalid\'","computed":false}]},"required":false,"description":"Specify whether the feedback is for valid or invalid fields","doclets":{"type":"{(\'valid\'|\'invalid\')}"}}}}')}}]);