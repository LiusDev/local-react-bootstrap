"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[6263],{3905:(o,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>c});var t=n(67294);function r(o,e,n){return e in o?Object.defineProperty(o,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):o[e]=n,o}function a(o,e){var n=Object.keys(o);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(o);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),n.push.apply(n,t)}return n}function l(o){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(o,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(o,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(o,e,Object.getOwnPropertyDescriptor(n,e))}))}return o}function i(o,e){if(null==o)return{};var n,t,r=function(o,e){if(null==o)return{};var n,t,r={},a=Object.keys(o);for(t=0;t<a.length;t++)n=a[t],e.indexOf(n)>=0||(r[n]=o[n]);return r}(o,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(o);for(t=0;t<a.length;t++)n=a[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(o,n)&&(r[n]=o[n])}return r}var s=t.createContext({}),p=function(o){var e=t.useContext(s),n=e;return o&&(n="function"==typeof o?o(e):l(l({},e),o)),n},m=function(o){var e=p(o.components);return t.createElement(s.Provider,{value:e},o.children)},d="mdxType",u={inlineCode:"code",wrapper:function(o){var e=o.children;return t.createElement(t.Fragment,{},e)}},C=t.forwardRef((function(o,e){var n=o.components,r=o.mdxType,a=o.originalType,s=o.parentName,m=i(o,["components","mdxType","originalType","parentName"]),d=p(n),C=r,c=d["".concat(s,".").concat(C)]||d[C]||u[C]||a;return n?t.createElement(c,l(l({ref:e},m),{},{components:n})):t.createElement(c,l({ref:e},m))}));function c(o,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof o||r){var a=n.length,l=new Array(a);l[0]=C;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=o,i[d]="string"==typeof o?o:r,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}C.displayName="MDXCreateElement"},76656:(o,e,n)=>{n.r(e),n.d(e,{assets:()=>y,contentTitle:()=>k,default:()=>O,frontMatter:()=>b,metadata:()=>g,toc:()=>h});var t=n(87462),r=(n(67294),n(3905));const a="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction ContainerExample() {\n  return (\n    <Container>\n      <Row>\n        <Col>1 of 1</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ContainerExample;\n",l="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction ContainerFluidExample() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col>1 of 1</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ContainerFluidExample;\n",i="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction ContainerFluidBreakpointExample() {\n  return (\n    <Container fluid=\"md\">\n      <Row>\n        <Col>1 of 1</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ContainerFluidBreakpointExample;\n",s="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction AutoLayoutExample() {\n  return (\n    <Container>\n      <Row>\n        <Col>1 of 2</Col>\n        <Col>2 of 2</Col>\n      </Row>\n      <Row>\n        <Col>1 of 3</Col>\n        <Col>2 of 3</Col>\n        <Col>3 of 3</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default AutoLayoutExample;\n",p="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction RowColLayoutExample() {\n  return (\n    <Container>\n      <Row xs={2} md={4} lg={6}>\n        <Col>1 of 2</Col>\n        <Col>2 of 2</Col>\n      </Row>\n      <Row xs={1} md={2}>\n        <Col>1 of 3</Col>\n        <Col>2 of 3</Col>\n        <Col>3 of 3</Col>\n      </Row>\n      <Row xs=\"auto\">\n        <Col>1 of 3</Col>\n        <Col>2 of 3</Col>\n        <Col>3 of 3</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default RowColLayoutExample;\n",m="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction RowColLayoutColWidthBreakpointExample() {\n  return (\n    <Container>\n      <Row md={4}>\n        <Col>1 of 3</Col>\n        <Col xs={6}>2 of 3</Col>\n        <Col>3 of 3</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default RowColLayoutColWidthBreakpointExample;\n",d="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction AutoLayoutSizingExample() {\n  return (\n    <Container>\n      <Row>\n        <Col>1 of 3</Col>\n        <Col xs={6}>2 of 3 (wider)</Col>\n        <Col>3 of 3</Col>\n      </Row>\n      <Row>\n        <Col>1 of 3</Col>\n        <Col xs={5}>2 of 3 (wider)</Col>\n        <Col>3 of 3</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default AutoLayoutSizingExample;\n",u='import Container from \'react-bootstrap/Container\';\nimport Row from \'react-bootstrap/Row\';\nimport Col from \'react-bootstrap/Col\';\n\nfunction AutoLayoutVariableExample() {\n  return (\n    <Container>\n      <Row className="justify-content-md-center">\n        <Col xs lg="2">\n          1 of 3\n        </Col>\n        <Col md="auto">Variable width content</Col>\n        <Col xs lg="2">\n          3 of 3\n        </Col>\n      </Row>\n      <Row>\n        <Col>1 of 3</Col>\n        <Col md="auto">Variable width content</Col>\n        <Col xs lg="2">\n          3 of 3\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default AutoLayoutVariableExample;\n',C="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction OffsettingExample() {\n  return (\n    <Container>\n      <Row>\n        <Col md={4}>md=4</Col>\n        <Col md={{ span: 4, offset: 4 }}>{`md={{ span: 4, offset: 4 }}`}</Col>\n      </Row>\n      <Row>\n        <Col md={{ span: 3, offset: 3 }}>{`md={{ span: 3, offset: 3 }}`}</Col>\n        <Col md={{ span: 3, offset: 3 }}>{`md={{ span: 3, offset: 3 }}`}</Col>\n      </Row>\n      <Row>\n        <Col md={{ span: 6, offset: 3 }}>{`md={{ span: 6, offset: 3 }}`}</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default OffsettingExample;\n",c="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction OrderingExample() {\n  return (\n    <Container>\n      <Row>\n        <Col xs>First, but unordered</Col>\n        <Col xs={{ order: 12 }}>Second, but last</Col>\n        <Col xs={{ order: 1 }}>Third, but second</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default OrderingExample;\n",f="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction OrderingFirstLastExample() {\n  return (\n    <Container>\n      <Row>\n        <Col xs={{ order: 'last' }}>First, but last</Col>\n        <Col xs>Second, but unordered</Col>\n        <Col xs={{ order: 'first' }}>Third, but first</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default OrderingFirstLastExample;\n",w="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction ResponsiveExample() {\n  return (\n    <Container>\n      {/* Stack the columns on mobile by making one full-width and the other half-width */}\n      <Row>\n        <Col xs={12} md={8}>\n          xs=12 md=8\n        </Col>\n        <Col xs={6} md={4}>\n          xs=6 md=4\n        </Col>\n      </Row>\n\n      {/* Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop */}\n      <Row>\n        <Col xs={6} md={4}>\n          xs=6 md=4\n        </Col>\n        <Col xs={6} md={4}>\n          xs=6 md=4\n        </Col>\n        <Col xs={6} md={4}>\n          xs=6 md=4\n        </Col>\n      </Row>\n\n      {/* Columns are always 50% wide, on mobile and desktop */}\n      <Row>\n        <Col xs={6}>xs=6</Col>\n        <Col xs={6}>xs=6</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ResponsiveExample;\n",x="import Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction ResponsiveAutoExample() {\n  return (\n    <Container>\n      <Row>\n        <Col sm={8}>sm=8</Col>\n        <Col sm={4}>sm=4</Col>\n      </Row>\n      <Row>\n        <Col sm>sm=true</Col>\n        <Col sm>sm=true</Col>\n        <Col sm>sm=true</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default ResponsiveAutoExample;\n",b={title:"Grid system",sidebar_label:"Grid"},k=void 0,g={unversionedId:"layout/grid",id:"layout/grid",title:"Grid system",description:"Bootstrap\u2019s grid system uses a series of containers, rows, and columns",source:"@site/docs/layout/grid.mdx",sourceDirName:"layout",slug:"/layout/grid",permalink:"/docs/layout/grid",draft:!1,tags:[],version:"current",frontMatter:{title:"Grid system",sidebar_label:"Grid"},sidebar:"sidebar",previous:{title:"Breakpoints",permalink:"/docs/layout/breakpoints"},next:{title:"Stacks",permalink:"/docs/layout/stack"}},y={},h=[{value:"Container",id:"container",level:2},{value:"Fluid Container",id:"fluid-container",level:3},{value:"Auto-layout columns",id:"auto-layout-columns",level:2},{value:"Setting one column width",id:"setting-one-column-width",level:3},{value:"Variable width content",id:"variable-width-content",level:3},{value:"Responsive grids",id:"responsive-grids",level:2},{value:"Setting column widths in Row",id:"setting-column-widths-in-row",level:3},{value:"API",id:"api",level:2},{value:"Container",id:"container-1",level:3},{value:"Row",id:"row",level:3},{value:"Col",id:"col",level:3}],v=o=>function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)},R=v("CodeBlock"),N=v("PropsTable"),T={toc:h},E="wrapper";function O(o){let{components:e,...n}=o;return(0,r.kt)(E,(0,t.Z)({},T,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Bootstrap\u2019s grid system uses a series of containers, rows, and columns\nto layout and align content. It\u2019s built with\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes"},"flexbox"),"\nand is fully responsive. Below is an example and an in-depth look at how the\ngrid comes together."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"New to or unfamiliar with flexbox?")," ",(0,r.kt)("a",{parentName:"p",href:"https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background"},"Read this CSS Tricks flexbox guide"),"\nfor background, terminology, guidelines, and code snippets."),(0,r.kt)("h2",{id:"container"},"Container"),(0,r.kt)("p",null,"Containers provide a means to center and horizontally pad your site\u2019s\ncontents. Use ",(0,r.kt)("inlineCode",{parentName:"p"},"Container")," for a responsive pixel width."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},a),(0,r.kt)("h3",{id:"fluid-container"},"Fluid Container"),(0,r.kt)("p",null,"You can use ",(0,r.kt)("inlineCode",{parentName:"p"},"<Container fluid />")," for width: 100% across\nall viewport and device sizes."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},l),(0,r.kt)("p",null,"You can set breakpoints for the ",(0,r.kt)("inlineCode",{parentName:"p"},"fluid")," prop. Setting it to a\nbreakpoint (",(0,r.kt)("inlineCode",{parentName:"p"},"sm, md, lg, xl, xxl"),") will set the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Container")," as fluid until the specified breakpoint."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},i),(0,r.kt)("h2",{id:"auto-layout-columns"},"Auto-layout columns"),(0,r.kt)("p",null,"When no column widths are specified the ",(0,r.kt)("inlineCode",{parentName:"p"},"Col")," component will\nrender equal width columns"),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},s),(0,r.kt)("h3",{id:"setting-one-column-width"},"Setting one column width"),(0,r.kt)("p",null,"Auto-layout for flexbox grid columns also means you can set the width of\none column and have the sibling columns automatically resize around it.\nYou may use predefined grid classes (as shown below), grid mixins, or\ninline widths. Note that the other columns will resize no matter the\nwidth of the center column."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},d),(0,r.kt)("h3",{id:"variable-width-content"},"Variable width content"),(0,r.kt)("p",null,"Set the column value (for any breakpoint size) to ",(0,r.kt)("inlineCode",{parentName:"p"},"auto")," to\nsize columns based on the natural width of their content."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},u),(0,r.kt)("h2",{id:"responsive-grids"},"Responsive grids"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Col")," lets you specify column widths across 6 breakpoint\nsizes (xs, sm, md, lg, xl and xxl). For every breakpoint, you can\nspecify the amount of columns to span, or set the prop to\n",(0,r.kt)("inlineCode",{parentName:"p"},"<Col lg={true} />")," for auto layout widths."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},x),(0,r.kt)("p",null,"You can also mix and match breakpoints to create different grids\ndepending on the screen size."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},w),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Col")," breakpoint props also have a more complicated\n",(0,r.kt)("inlineCode",{parentName:"p"},"object")," prop form: ",(0,r.kt)("inlineCode",{parentName:"p"},"{span: number, order: number, offset: number}")," for\nspecifying offsets and ordering effects."),(0,r.kt)("p",null,"You can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"order")," property to control the ",(0,r.kt)("strong",{parentName:"p"},"visual order")," of your content."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},c),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"order")," property also supports ",(0,r.kt)("inlineCode",{parentName:"p"},"first")," (",(0,r.kt)("inlineCode",{parentName:"p"},"order: -1"),") and ",(0,r.kt)("inlineCode",{parentName:"p"},"last")," (",(0,r.kt)("inlineCode",{parentName:"p"},"order: $columns+1"),")."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},f),(0,r.kt)("p",null,"For offsetting grid columns you can set an ",(0,r.kt)("inlineCode",{parentName:"p"},"offset")," value or for a\nmore general layout, use the margin class utilities."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},C),(0,r.kt)("h3",{id:"setting-column-widths-in-row"},"Setting column widths in Row"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Row")," lets you specify column widths across 6 breakpoint\nsizes (xs, sm, md, lg, xl and xxl). For every breakpoint, you can\nspecify the amount of columns that will fit next to each other. You can\nalso specify ",(0,r.kt)("inlineCode",{parentName:"p"},"auto")," to set the columns to their natural\nwidths."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},p),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"Row")," column widths will override ",(0,r.kt)("inlineCode",{parentName:"p"},"Col")," widths\nset on lower breakpoints when viewed on larger screens. The\n",(0,r.kt)("inlineCode",{parentName:"p"},"<Col xs={6} />")," size will be overridden by ",(0,r.kt)("inlineCode",{parentName:"p"},"<Row md={4} />"),"\non medium and larger screens."),(0,r.kt)(R,{language:"jsx",live:!0,previewClassName:"grid-example",mdxType:"CodeBlock"},m),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"container-1"},"Container"),(0,r.kt)(N,{name:"Container",mdxType:"PropsTable"}),(0,r.kt)("h3",{id:"row"},"Row"),(0,r.kt)(N,{name:"Row",mdxType:"PropsTable"}),(0,r.kt)("h3",{id:"col"},"Col"),(0,r.kt)(N,{name:"Col",mdxType:"PropsTable"}))}O.isMDXComponent=!0}}]);