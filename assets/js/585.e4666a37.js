"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[585],{40585:e=>{e.exports=JSON.parse('{"description":"A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\\nare passed directly to the default `Dropdown.Menu`. This component accepts all of\\n[`Dropdown`\'s props](#dropdown-props).\\n\\n_All unknown props are passed through to the `Dropdown` component._ Only\\nthe Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\\nalong with menu-related props are passed to the `Dropdown.Menu`","props":{"id":{"type":{"name":"string"},"required":false,"description":"An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.","doclets":{"type":"{string}"}},"href":{"type":{"name":"string"},"required":false,"description":"An `href` passed to the Toggle component","doclets":{}},"onClick":{"type":{"name":"func"},"required":false,"description":"An `onClick` handler passed to the Toggle component","doclets":{}},"title":{"type":{"name":"node"},"required":true,"description":"The content of the non-toggle Button.","doclets":{}},"disabled":{"type":{"name":"bool"},"required":false,"description":"Disables both Buttons","doclets":{}},"align":{"type":{"name":"custom","raw":"alignPropType"},"required":false,"description":"Aligns the dropdown menu.\\n\\n_see [DropdownMenu](#dropdown-menu-props) for more details_","doclets":{"type":"{\\"start\\"|\\"end\\"|{ sm: \\"start\\"|\\"end\\" }|{ md: \\"start\\"|\\"end\\" }|{ lg: \\"start\\"|\\"end\\" }|{ xl: \\"start\\"|\\"end\\"}|{ xxl: \\"start\\"|\\"end\\"} }"}},"menuRole":{"type":{"name":"string"},"required":false,"description":"An ARIA accessible role applied to the Menu component. When set to \'menu\', The dropdown","doclets":{}},"renderMenuOnMount":{"type":{"name":"bool"},"required":false,"description":"Whether to render the dropdown menu in the DOM before the first time it is shown","doclets":{}},"rootCloseEvent":{"type":{"name":"string"},"required":false,"description":"Which event when fired outside the component will cause it to be closed.\\n\\n_see [DropdownMenu](#dropdown-menu-props) for more details_","doclets":{}},"menuVariant":{"type":{"name":"enum","value":[{"value":"\'dark\'","computed":false}]},"required":false,"description":"Menu color variant.\\n\\nOmitting this will use the default light color.","doclets":{}},"flip":{"type":{"name":"bool"},"required":false,"description":"Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\\nPopper.js\'s flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).","doclets":{}},"bsPrefix":{"type":{"name":"string"},"required":false,"description":"","doclets":{"ignore":true}},"variant":{"type":{"name":"string"},"required":false,"description":"","doclets":{"ignore":true}},"size":{"type":{"name":"string"},"required":false,"description":"","doclets":{"ignore":true}}}}')}}]);