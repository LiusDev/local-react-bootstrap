"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[6304],{3905:(t,n,o)=>{o.d(n,{Zo:()=>s,kt:()=>m});var e=o(67294);function r(t,n,o){return n in t?Object.defineProperty(t,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[n]=o,t}function u(t,n){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),o.push.apply(o,e)}return o}function a(t){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?u(Object(o),!0).forEach((function(n){r(t,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):u(Object(o)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(o,n))}))}return t}function p(t,n){if(null==t)return{};var o,e,r=function(t,n){if(null==t)return{};var o,e,r={},u=Object.keys(t);for(e=0;e<u.length;e++)o=u[e],n.indexOf(o)>=0||(r[o]=t[o]);return r}(t,n);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(e=0;e<u.length;e++)o=u[e],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(r[o]=t[o])}return r}var i=e.createContext({}),l=function(t){var n=e.useContext(i),o=n;return t&&(o="function"==typeof t?t(n):a(a({},n),t)),o},s=function(t){var n=l(t.components);return e.createElement(i.Provider,{value:n},t.children)},d="mdxType",c={inlineCode:"code",wrapper:function(t){var n=t.children;return e.createElement(e.Fragment,{},n)}},B=e.forwardRef((function(t,n){var o=t.components,r=t.mdxType,u=t.originalType,i=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),d=l(o),B=r,m=d["".concat(i,".").concat(B)]||d[B]||c[B]||u;return o?e.createElement(m,a(a({ref:n},s),{},{components:o})):e.createElement(m,a({ref:n},s))}));function m(t,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof t||r){var u=o.length,a=new Array(u);a[0]=B;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=t,p[d]="string"==typeof t?t:r,a[1]=p;for(var l=2;l<u;l++)a[l]=o[l];return e.createElement.apply(null,a)}return e.createElement.apply(null,o)}B.displayName="MDXCreateElement"},69251:(t,n,o)=>{o.r(n),o.d(n,{assets:()=>m,contentTitle:()=>c,default:()=>k,frontMatter:()=>d,metadata:()=>B,toc:()=>b});var e=o(87462),r=(o(67294),o(3905));const u='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\n\nfunction BasicExample() {\n  return (\n    <ButtonGroup aria-label="Basic example">\n      <Button variant="secondary">Left</Button>\n      <Button variant="secondary">Middle</Button>\n      <Button variant="secondary">Right</Button>\n    </ButtonGroup>\n  );\n}\n\nexport default BasicExample;\n',a='import Button from \'react-bootstrap/Button\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\nimport Dropdown from \'react-bootstrap/Dropdown\';\n\nfunction NestedExample() {\n  return (\n    <ButtonGroup>\n      <Button>1</Button>\n      <Button>2</Button>\n\n      <DropdownButton as={ButtonGroup} title="Dropdown" id="bg-nested-dropdown">\n        <Dropdown.Item eventKey="1">Dropdown link</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Dropdown link</Dropdown.Item>\n      </DropdownButton>\n    </ButtonGroup>\n  );\n}\n\nexport default NestedExample;\n',p='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\n\nfunction SizesExample() {\n  return (\n    <>\n      <ButtonGroup size="lg" className="mb-2">\n        <Button>Left</Button>\n        <Button>Middle</Button>\n        <Button>Right</Button>\n      </ButtonGroup>\n      <br />\n      <ButtonGroup className="mb-2">\n        <Button>Left</Button>\n        <Button>Middle</Button>\n        <Button>Right</Button>\n      </ButtonGroup>\n      <br />\n      <ButtonGroup size="sm">\n        <Button>Left</Button>\n        <Button>Middle</Button>\n        <Button>Right</Button>\n      </ButtonGroup>\n    </>\n  );\n}\n\nexport default SizesExample;\n',i='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport ButtonToolbar from \'react-bootstrap/ButtonToolbar\';\nimport Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction ToolbarExample() {\n  return (\n    <>\n      <ButtonToolbar className="mb-3" aria-label="Toolbar with Button groups">\n        <ButtonGroup className="me-2" aria-label="First group">\n          <Button variant="secondary">1</Button>{\' \'}\n          <Button variant="secondary">2</Button>{\' \'}\n          <Button variant="secondary">3</Button>{\' \'}\n          <Button variant="secondary">4</Button>\n        </ButtonGroup>\n        <InputGroup>\n          <InputGroup.Text id="btnGroupAddon">@</InputGroup.Text>\n          <Form.Control\n            type="text"\n            placeholder="Input group example"\n            aria-label="Input group example"\n            aria-describedby="btnGroupAddon"\n          />\n        </InputGroup>\n      </ButtonToolbar>\n\n      <ButtonToolbar\n        className="justify-content-between"\n        aria-label="Toolbar with Button groups"\n      >\n        <ButtonGroup aria-label="First group">\n          <Button variant="secondary">1</Button>{\' \'}\n          <Button variant="secondary">2</Button>{\' \'}\n          <Button variant="secondary">3</Button>{\' \'}\n          <Button variant="secondary">4</Button>\n        </ButtonGroup>\n        <InputGroup>\n          <InputGroup.Text id="btnGroupAddon2">@</InputGroup.Text>\n          <Form.Control\n            type="text"\n            placeholder="Input group example"\n            aria-label="Input group example"\n            aria-describedby="btnGroupAddon2"\n          />\n        </InputGroup>\n      </ButtonToolbar>\n    </>\n  );\n}\n\nexport default ToolbarExample;\n',l='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport ButtonToolbar from \'react-bootstrap/ButtonToolbar\';\n\nfunction ToolbarBasicExample() {\n  return (\n    <ButtonToolbar aria-label="Toolbar with button groups">\n      <ButtonGroup className="me-2" aria-label="First group">\n        <Button>1</Button> <Button>2</Button> <Button>3</Button>{\' \'}\n        <Button>4</Button>\n      </ButtonGroup>\n      <ButtonGroup className="me-2" aria-label="Second group">\n        <Button>5</Button> <Button>6</Button> <Button>7</Button>\n      </ButtonGroup>\n      <ButtonGroup aria-label="Third group">\n        <Button>8</Button>\n      </ButtonGroup>\n    </ButtonToolbar>\n  );\n}\n\nexport default ToolbarBasicExample;\n',s='import Button from \'react-bootstrap/Button\';\nimport ButtonGroup from \'react-bootstrap/ButtonGroup\';\nimport Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\n\nfunction VerticalExample() {\n  return (\n    <ButtonGroup vertical>\n      <Button>Button</Button>\n      <Button>Button</Button>\n\n      <DropdownButton\n        as={ButtonGroup}\n        title="Dropdown"\n        id="bg-vertical-dropdown-1"\n      >\n        <Dropdown.Item eventKey="1">Dropdown link</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Dropdown link</Dropdown.Item>\n      </DropdownButton>\n\n      <Button>Button</Button>\n      <Button>Button</Button>\n\n      <DropdownButton\n        as={ButtonGroup}\n        title="Dropdown"\n        id="bg-vertical-dropdown-2"\n      >\n        <Dropdown.Item eventKey="1">Dropdown link</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Dropdown link</Dropdown.Item>\n      </DropdownButton>\n\n      <DropdownButton\n        as={ButtonGroup}\n        title="Dropdown"\n        id="bg-vertical-dropdown-3"\n      >\n        <Dropdown.Item eventKey="1">Dropdown link</Dropdown.Item>\n        <Dropdown.Item eventKey="2">Dropdown link</Dropdown.Item>\n      </DropdownButton>\n    </ButtonGroup>\n  );\n}\n\nexport default VerticalExample;\n',d={title:"Button group",description:"Group a series of buttons together on a single line or stack them in a vertical column."},c=void 0,B={unversionedId:"components/button-group",id:"components/button-group",title:"Button group",description:"Group a series of buttons together on a single line or stack them in a vertical column.",source:"@site/docs/components/button-group.mdx",sourceDirName:"components",slug:"/components/button-group",permalink:"/docs/components/button-group",draft:!1,tags:[],version:"current",frontMatter:{title:"Button group",description:"Group a series of buttons together on a single line or stack them in a vertical column."},sidebar:"sidebar",previous:{title:"Breadcrumbs",permalink:"/docs/components/breadcrumb"},next:{title:"Buttons",permalink:"/docs/components/buttons"}},m={},b=[{value:"Basic example",id:"basic-example",level:2},{value:"Button toolbar",id:"button-toolbar",level:2},{value:"Sizing",id:"sizing",level:2},{value:"Nesting",id:"nesting",level:2},{value:"Vertical variation",id:"vertical-variation",level:2},{value:"API",id:"api",level:2},{value:"ButtonGroup",id:"buttongroup",level:3},{value:"ButtonToolbar",id:"buttontoolbar",level:3}],f=t=>function(n){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)},g=f("CodeBlock"),v=f("PropsTable"),y={toc:b},w="wrapper";function k(t){let{components:n,...o}=t;return(0,r.kt)(w,(0,e.Z)({},y,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"basic-example"},"Basic example"),(0,r.kt)("p",null,"Wrap a series of ",(0,r.kt)("inlineCode",{parentName:"p"},"<Button>"),"s in a ",(0,r.kt)("inlineCode",{parentName:"p"},"<ButtonGroup>"),"."),(0,r.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},u),(0,r.kt)("h2",{id:"button-toolbar"},"Button toolbar"),(0,r.kt)("p",null,"Combine sets of ",(0,r.kt)("inlineCode",{parentName:"p"},"<ButtonGroup>"),"s into a ",(0,r.kt)("inlineCode",{parentName:"p"},"<ButtonToolbar>")," for more complex components."),(0,r.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},l),(0,r.kt)("p",null,"Feel free to mix input groups with button groups in your toolbars.\nSimilar to the example above, you\u2019ll likely need some utilities though\nto space things properly."),(0,r.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},i),(0,r.kt)("h2",{id:"sizing"},"Sizing"),(0,r.kt)("p",null,"Instead of applying button sizing props to every button in a group, just\nadd ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," prop to the ",(0,r.kt)("inlineCode",{parentName:"p"},"<ButtonGroup>"),"."),(0,r.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},p),(0,r.kt)("h2",{id:"nesting"},"Nesting"),(0,r.kt)("p",null,"You can place other button types within the\n",(0,r.kt)("inlineCode",{parentName:"p"},"<ButtonGroup>")," like ",(0,r.kt)("inlineCode",{parentName:"p"},"<DropdownButton>"),"s."),(0,r.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},a),(0,r.kt)("h2",{id:"vertical-variation"},"Vertical variation"),(0,r.kt)("p",null,"Make a set of buttons appear vertically stacked rather than\nhorizontally, by adding ",(0,r.kt)("inlineCode",{parentName:"p"},"vertical")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"<ButtonGroup>"),".\n",(0,r.kt)("strong",{parentName:"p"},"Split button dropdowns are not supported here.")),(0,r.kt)(g,{language:"jsx",live:!0,mdxType:"CodeBlock"},s),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"buttongroup"},"ButtonGroup"),(0,r.kt)(v,{name:"ButtonGroup",mdxType:"PropsTable"}),(0,r.kt)("h3",{id:"buttontoolbar"},"ButtonToolbar"),(0,r.kt)(v,{name:"ButtonToolbar",mdxType:"PropsTable"}))}k.isMDXComponent=!0}}]);