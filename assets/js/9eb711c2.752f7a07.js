"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[9277],{3905:(n,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>b});var e=o(67294);function r(n,t,o){return t in n?Object.defineProperty(n,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[t]=o,n}function p(n,t){var o=Object.keys(n);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(n);t&&(e=e.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),o.push.apply(o,e)}return o}function a(n){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?p(Object(o),!0).forEach((function(t){r(n,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):p(Object(o)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(o,t))}))}return n}function u(n,t){if(null==n)return{};var o,e,r=function(n,t){if(null==n)return{};var o,e,r={},p=Object.keys(n);for(e=0;e<p.length;e++)o=p[e],t.indexOf(o)>=0||(r[o]=n[o]);return r}(n,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(n);for(e=0;e<p.length;e++)o=p[e],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(n,o)&&(r[o]=n[o])}return r}var i=e.createContext({}),l=function(n){var t=e.useContext(i),o=t;return n&&(o="function"==typeof n?n(t):a(a({},t),n)),o},d=function(n){var t=l(n.components);return e.createElement(i.Provider,{value:t},n.children)},s="mdxType",m={inlineCode:"code",wrapper:function(n){var t=n.children;return e.createElement(e.Fragment,{},t)}},c=e.forwardRef((function(n,t){var o=n.components,r=n.mdxType,p=n.originalType,i=n.parentName,d=u(n,["components","mdxType","originalType","parentName"]),s=l(o),c=r,b=s["".concat(i,".").concat(c)]||s[c]||m[c]||p;return o?e.createElement(b,a(a({ref:t},d),{},{components:o})):e.createElement(b,a({ref:t},d))}));function b(n,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var p=o.length,a=new Array(p);a[0]=c;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=n,u[s]="string"==typeof n?n:r,a[1]=u;for(var l=2;l<p;l++)a[l]=o[l];return e.createElement.apply(null,a)}return e.createElement.apply(null,o)}c.displayName="MDXCreateElement"},53906:(n,t,o)=>{o.r(t),o.d(t,{assets:()=>f,contentTitle:()=>b,default:()=>v,frontMatter:()=>c,metadata:()=>I,toc:()=>w});var e=o(87462),r=(o(67294),o(3905));const p='import Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction BasicExample() {\n  return (\n    <>\n      <InputGroup className="mb-3">\n        <InputGroup.Text id="basic-addon1">@</InputGroup.Text>\n        <Form.Control\n          placeholder="Username"\n          aria-label="Username"\n          aria-describedby="basic-addon1"\n        />\n      </InputGroup>\n\n      <InputGroup className="mb-3">\n        <Form.Control\n          placeholder="Recipient\'s username"\n          aria-label="Recipient\'s username"\n          aria-describedby="basic-addon2"\n        />\n        <InputGroup.Text id="basic-addon2">@example.com</InputGroup.Text>\n      </InputGroup>\n\n      <Form.Label htmlFor="basic-url">Your vanity URL</Form.Label>\n      <InputGroup className="mb-3">\n        <InputGroup.Text id="basic-addon3">\n          https://example.com/users/\n        </InputGroup.Text>\n        <Form.Control id="basic-url" aria-describedby="basic-addon3" />\n      </InputGroup>\n\n      <InputGroup className="mb-3">\n        <InputGroup.Text>$</InputGroup.Text>\n        <Form.Control aria-label="Amount (to the nearest dollar)" />\n        <InputGroup.Text>.00</InputGroup.Text>\n      </InputGroup>\n\n      <InputGroup>\n        <InputGroup.Text>With textarea</InputGroup.Text>\n        <Form.Control as="textarea" aria-label="With textarea" />\n      </InputGroup>\n    </>\n  );\n}\n\nexport default BasicExample;\n',a='import Dropdown from \'react-bootstrap/Dropdown\';\nimport DropdownButton from \'react-bootstrap/DropdownButton\';\nimport Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction ButtonDropdownsExample() {\n  return (\n    <>\n      <InputGroup className="mb-3">\n        <DropdownButton\n          variant="outline-secondary"\n          title="Dropdown"\n          id="input-group-dropdown-1"\n        >\n          <Dropdown.Item href="#">Action</Dropdown.Item>\n          <Dropdown.Item href="#">Another action</Dropdown.Item>\n          <Dropdown.Item href="#">Something else here</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item href="#">Separated link</Dropdown.Item>\n        </DropdownButton>\n        <Form.Control aria-label="Text input with dropdown button" />\n      </InputGroup>\n\n      <InputGroup className="mb-3">\n        <Form.Control aria-label="Text input with dropdown button" />\n\n        <DropdownButton\n          variant="outline-secondary"\n          title="Dropdown"\n          id="input-group-dropdown-2"\n          align="end"\n        >\n          <Dropdown.Item href="#">Action</Dropdown.Item>\n          <Dropdown.Item href="#">Another action</Dropdown.Item>\n          <Dropdown.Item href="#">Something else here</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item href="#">Separated link</Dropdown.Item>\n        </DropdownButton>\n      </InputGroup>\n\n      <InputGroup>\n        <DropdownButton\n          variant="outline-secondary"\n          title="Dropdown"\n          id="input-group-dropdown-3"\n        >\n          <Dropdown.Item href="#">Action</Dropdown.Item>\n          <Dropdown.Item href="#">Another action</Dropdown.Item>\n          <Dropdown.Item href="#">Something else here</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item href="#">Separated link</Dropdown.Item>\n        </DropdownButton>\n        <Form.Control aria-label="Text input with 2 dropdown buttons" />\n        <DropdownButton\n          variant="outline-secondary"\n          title="Dropdown"\n          id="input-group-dropdown-4"\n          align="end"\n        >\n          <Dropdown.Item href="#">Action</Dropdown.Item>\n          <Dropdown.Item href="#">Another action</Dropdown.Item>\n          <Dropdown.Item href="#">Something else here</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item href="#">Separated link</Dropdown.Item>\n        </DropdownButton>\n      </InputGroup>\n    </>\n  );\n}\n\nexport default ButtonDropdownsExample;\n',u='import Button from \'react-bootstrap/Button\';\nimport Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction ButtonsExample() {\n  return (\n    <>\n      <InputGroup className="mb-3">\n        <Button variant="outline-secondary" id="button-addon1">\n          Button\n        </Button>\n        <Form.Control\n          aria-label="Example text with button addon"\n          aria-describedby="basic-addon1"\n        />\n      </InputGroup>\n\n      <InputGroup className="mb-3">\n        <Form.Control\n          placeholder="Recipient\'s username"\n          aria-label="Recipient\'s username"\n          aria-describedby="basic-addon2"\n        />\n        <Button variant="outline-secondary" id="button-addon2">\n          Button\n        </Button>\n      </InputGroup>\n\n      <InputGroup className="mb-3">\n        <Button variant="outline-secondary">Button</Button>\n        <Button variant="outline-secondary">Button</Button>\n        <Form.Control aria-label="Example text with two button addons" />\n      </InputGroup>\n\n      <InputGroup>\n        <Form.Control\n          placeholder="Recipient\'s username"\n          aria-label="Recipient\'s username with two button addons"\n        />\n        <Button variant="outline-secondary">Button</Button>\n        <Button variant="outline-secondary">Button</Button>\n      </InputGroup>\n    </>\n  );\n}\n\nexport default ButtonsExample;\n',i='import Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction CheckboxesExample() {\n  return (\n    <>\n      <InputGroup className="mb-3">\n        <InputGroup.Checkbox aria-label="Checkbox for following text input" />\n        <Form.Control aria-label="Text input with checkbox" />\n      </InputGroup>\n      <InputGroup>\n        <InputGroup.Radio aria-label="Radio button for following text input" />\n        <Form.Control aria-label="Text input with radio button" />\n      </InputGroup>\n    </>\n  );\n}\n\nexport default CheckboxesExample;\n',l='import Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction MultipleAddonsExample() {\n  return (\n    <>\n      <InputGroup className="mb-3">\n        <InputGroup.Text>$</InputGroup.Text>\n        <InputGroup.Text>0.00</InputGroup.Text>\n        <Form.Control aria-label="Dollar amount (with dot and two decimal places)" />\n      </InputGroup>\n      <InputGroup>\n        <Form.Control aria-label="Dollar amount (with dot and two decimal places)" />\n        <InputGroup.Text>$</InputGroup.Text>\n        <InputGroup.Text>0.00</InputGroup.Text>\n      </InputGroup>\n    </>\n  );\n}\n\nexport default MultipleAddonsExample;\n',d='import Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction MultipleInputsExample() {\n  return (\n    <InputGroup className="mb-3">\n      <InputGroup.Text>First and last name</InputGroup.Text>\n      <Form.Control aria-label="First name" />\n      <Form.Control aria-label="Last name" />\n    </InputGroup>\n  );\n}\n\nexport default MultipleInputsExample;\n',s='import Dropdown from \'react-bootstrap/Dropdown\';\nimport Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\nimport SplitButton from \'react-bootstrap/SplitButton\';\n\nfunction SegmentedButtonDropdownsExample() {\n  return (\n    <>\n      <InputGroup className="mb-3">\n        <SplitButton\n          variant="outline-secondary"\n          title="Action"\n          id="segmented-button-dropdown-1"\n        >\n          <Dropdown.Item href="#">Action</Dropdown.Item>\n          <Dropdown.Item href="#">Another action</Dropdown.Item>\n          <Dropdown.Item href="#">Something else here</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item href="#">Separated link</Dropdown.Item>\n        </SplitButton>\n        <Form.Control aria-label="Text input with dropdown button" />\n      </InputGroup>\n\n      <InputGroup className="mb-3">\n        <Form.Control aria-label="Text input with dropdown button" />\n        <SplitButton\n          variant="outline-secondary"\n          title="Action"\n          id="segmented-button-dropdown-2"\n          alignRight\n        >\n          <Dropdown.Item href="#">Action</Dropdown.Item>\n          <Dropdown.Item href="#">Another action</Dropdown.Item>\n          <Dropdown.Item href="#">Something else here</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item href="#">Separated link</Dropdown.Item>\n        </SplitButton>\n      </InputGroup>\n    </>\n  );\n}\n\nexport default SegmentedButtonDropdownsExample;\n',m='import Form from \'react-bootstrap/Form\';\nimport InputGroup from \'react-bootstrap/InputGroup\';\n\nfunction SizesExample() {\n  return (\n    <>\n      <InputGroup size="sm" className="mb-3">\n        <InputGroup.Text id="inputGroup-sizing-sm">Small</InputGroup.Text>\n        <Form.Control\n          aria-label="Small"\n          aria-describedby="inputGroup-sizing-sm"\n        />\n      </InputGroup>\n      <br />\n      <InputGroup className="mb-3">\n        <InputGroup.Text id="inputGroup-sizing-default">\n          Default\n        </InputGroup.Text>\n        <Form.Control\n          aria-label="Default"\n          aria-describedby="inputGroup-sizing-default"\n        />\n      </InputGroup>\n      <br />\n      <InputGroup size="lg">\n        <InputGroup.Text id="inputGroup-sizing-lg">Large</InputGroup.Text>\n        <Form.Control\n          aria-label="Large"\n          aria-describedby="inputGroup-sizing-sm"\n        />\n      </InputGroup>\n    </>\n  );\n}\n\nexport default SizesExample;\n',c={title:"Input Group",description:"Easily extend form controls by adding text, buttons, or button groups on either side of textual inputs, custom selects, and custom file inputs.",sidebar_position:7},b=void 0,I={unversionedId:"forms/input-group",id:"forms/input-group",title:"Input Group",description:"Easily extend form controls by adding text, buttons, or button groups on either side of textual inputs, custom selects, and custom file inputs.",source:"@site/docs/forms/input-group.mdx",sourceDirName:"forms",slug:"/forms/input-group",permalink:"/docs/forms/input-group",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Input Group",description:"Easily extend form controls by adding text, buttons, or button groups on either side of textual inputs, custom selects, and custom file inputs.",sidebar_position:7},sidebar:"sidebar",previous:{title:"Range",permalink:"/docs/forms/range"},next:{title:"Floating labels",permalink:"/docs/forms/floating-labels"}},f={},w=[{value:"Example",id:"example",level:2},{value:"Sizing",id:"sizing",level:2},{value:"Checkboxes and radios",id:"checkboxes-and-radios",level:2},{value:"Multiple inputs",id:"multiple-inputs",level:2},{value:"Multiple addons",id:"multiple-addons",level:2},{value:"Button addons",id:"button-addons",level:2},{value:"Buttons with Dropdowns",id:"buttons-with-dropdowns",level:2},{value:"Segmented buttons",id:"segmented-buttons",level:2},{value:"API",id:"api",level:2},{value:"InputGroup",id:"inputgroup",level:3}],x=n=>function(t){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},h=x("CodeBlock"),G=x("PropsTable"),g={toc:w},D="wrapper";function v(n){let{components:t,...o}=n;return(0,r.kt)(D,(0,e.Z)({},g,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"Place one add-on or button on either side of an input. You may also\nplace one on both sides of an input. Remember to place\n",(0,r.kt)("inlineCode",{parentName:"p"},"<label>"),"s outside the input group."),(0,r.kt)(h,{language:"jsx",live:!0,mdxType:"CodeBlock"},p),(0,r.kt)("h2",{id:"sizing"},"Sizing"),(0,r.kt)("p",null,"Add the relative form sizing classes to the ",(0,r.kt)("inlineCode",{parentName:"p"},"InputGroup")," and\ncontents within will automatically resize\u2014no need for repeating the form\ncontrol size classes on each element."),(0,r.kt)(h,{language:"jsx",live:!0,mdxType:"CodeBlock"},m),(0,r.kt)("h2",{id:"checkboxes-and-radios"},"Checkboxes and radios"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"InputGroup.Radio")," or\n",(0,r.kt)("inlineCode",{parentName:"p"},"InputGroup.Checkbox")," to add options to an input group."),(0,r.kt)(h,{language:"jsx",live:!0,mdxType:"CodeBlock"},i),(0,r.kt)("h2",{id:"multiple-inputs"},"Multiple inputs"),(0,r.kt)("p",null,"While multiple inputs are supported visually, validation styles are only\navailable for input groups with a single input."),(0,r.kt)(h,{language:"jsx",live:!0,mdxType:"CodeBlock"},d),(0,r.kt)("h2",{id:"multiple-addons"},"Multiple addons"),(0,r.kt)("p",null,"Multiple add-ons are supported and can be mixed with checkbox and radio\ninput versions."),(0,r.kt)(h,{language:"jsx",live:!0,mdxType:"CodeBlock"},l),(0,r.kt)("h2",{id:"button-addons"},"Button addons"),(0,r.kt)(h,{language:"jsx",live:!0,mdxType:"CodeBlock"},u),(0,r.kt)("h2",{id:"buttons-with-dropdowns"},"Buttons with Dropdowns"),(0,r.kt)(h,{language:"jsx",live:!0,mdxType:"CodeBlock"},a),(0,r.kt)("h2",{id:"segmented-buttons"},"Segmented buttons"),(0,r.kt)(h,{language:"jsx",live:!0,mdxType:"CodeBlock"},s),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"inputgroup"},"InputGroup"),(0,r.kt)(G,{name:"InputGroup",mdxType:"PropsTable"}))}v.isMDXComponent=!0}}]);