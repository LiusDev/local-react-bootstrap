"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[9596],{29596:e=>{e.exports=JSON.parse('{"description":"","props":{"id":{"type":{"name":"string"},"required":false,"description":"HTML id attribute, required if no `generateChildId` prop\\nis specified.","doclets":{"type":"{string}"}},"transition":{"type":{"name":"union","value":[{"name":"enum","value":[{"value":"false","computed":false}]},{"name":"elementType"}]},"required":false,"description":"Sets a default animation strategy for all children `<TabPane>`s.\\nDefaults to `<Fade>` animation; else, use `false` to disable, or a\\ncustom react-transition-group `<Transition/>` component.","tsType":{"name":"TransitionType"},"doclets":{"type":"{{Transition | false}}","default":"{Fade}"}},"mountOnEnter":{"type":{"name":"bool"},"required":false,"description":"Wait until the first \\"enter\\" transition to mount tabs (add them to the DOM)","doclets":{}},"unmountOnExit":{"type":{"name":"bool"},"required":false,"description":"Unmount tabs (remove it from the DOM) when they are no longer visible","doclets":{}},"generateChildId":{"type":{"name":"func"},"required":false,"description":"A function that takes an `eventKey` and `type` and returns a unique id for\\nchild tab `<NavItem>`s and `<TabPane>`s. The function _must_ be a pure\\nfunction, meaning it should always return the _same_ id for the same set\\nof inputs. The default value requires that an `id` to be set for the\\n`<TabContainer>`.\\n\\nThe `type` argument will either be `\\"tab\\"` or `\\"pane\\"`.","doclets":{"defaultValue":"(eventKey, type) => `${props.id}-${type}-${eventKey}`"}},"onSelect":{"type":{"name":"func"},"required":false,"description":"A callback fired when a tab is selected.","doclets":{"controllable":"activeKey"}},"activeKey":{"type":{"name":"union","value":[{"name":"string"},{"name":"number"}]},"required":false,"description":"The `eventKey` of the currently active tab.","doclets":{"controllable":"onSelect"}}}}')}}]);