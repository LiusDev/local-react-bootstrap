"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[9814],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>y,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var r=n(87462),o=(n(67294),n(3905));const a="import ThemeProvider from 'react-bootstrap/ThemeProvider';\nimport Button from 'react-bootstrap/Button';\n\nfunction PrefixesExample() {\n  return (\n    <>\n      {/* Hint: inspect the markup to see how the classes differ */}\n      <ThemeProvider prefixes={{ btn: 'my-btn' }}>\n        <Button variant=\"primary\">My Button</Button>\n      </ThemeProvider>\n      <Button bsPrefix=\"super-btn\" variant=\"primary\">\n        Super button\n      </Button>\n    </>\n  );\n}\n\nexport default PrefixesExample;\n",i='import Button from \'react-bootstrap/Button\';\n\nfunction VariantsExample() {\n  return (\n    <>\n      <style type="text/css">\n        {`\n    .btn-flat {\n      background-color: purple;\n      color: white;\n    }\n\n    .btn-xxl {\n      padding: 1rem 1.5rem;\n      font-size: 1.5rem;\n    }\n    `}\n      </style>\n\n      <Button variant="flat" size="xxl">\n        flat button\n      </Button>\n    </>\n  );\n}\n\nexport default VariantsExample;\n',s={title:"Theming and customizing styles",sidebar_label:"Theming",sidebar_position:3},l=void 0,c={unversionedId:"getting-started/theming",id:"getting-started/theming",title:"Theming and customizing styles",description:"Generally, if you stick to the Bootstrap defined classes and variants,",source:"@site/docs/getting-started/theming.mdx",sourceDirName:"getting-started",slug:"/getting-started/theming",permalink:"/docs/getting-started/theming",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Theming and customizing styles",sidebar_label:"Theming",sidebar_position:3},sidebar:"sidebar",previous:{title:"Why React-Bootstrap?",permalink:"/docs/getting-started/why-react-bootstrap"},next:{title:"Color modes",permalink:"/docs/getting-started/color-modes"}},p={},u=[{value:"New variants and sizes",id:"new-variants-and-sizes",level:2},{value:"Prefixing components",id:"prefixing-components",level:2}],d=(m="CodeBlock",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var m;const f={toc:u},g="wrapper";function y(e){let{components:t,...n}=e;return(0,o.kt)(g,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Generally, if you stick to the Bootstrap defined classes and variants,\nthere isn't anything you need to do to use a custom theme with\nReact-Bootstrap. It just works. But we also make coloring outside the\nlines easy to do."),(0,o.kt)("h2",{id:"new-variants-and-sizes"},"New variants and sizes"),(0,o.kt)("p",null,"Custom variants and sizes should follow the pattern of the default\nBootstrap variants, and define css classes matching:\n",(0,o.kt)("inlineCode",{parentName:"p"},"component-*"),". React-Bootstrap builds the component\n",(0,o.kt)("inlineCode",{parentName:"p"},"classNames")," in a consistent way that you can rely on. For\ninstance this custom ",(0,o.kt)("inlineCode",{parentName:"p"},"Button"),"."),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},i),(0,o.kt)("h2",{id:"prefixing-components"},"Prefixing components"),(0,o.kt)("p",null,'In some cases you may need to change the base class "prefix" of one or\nmore components. You can control how a component prefixes its classes\nlocally by changing the ',(0,o.kt)("inlineCode",{parentName:"p"},"bsPrefix")," prop or globally via the\n",(0,o.kt)("inlineCode",{parentName:"p"},"ThemeProvider")," component."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Changing prefixes is an escape hatch and generally shouldn't be used.")),(0,o.kt)(d,{language:"jsx",live:!0,mdxType:"CodeBlock"},a))}y.isMDXComponent=!0}}]);