"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[2808],{22808:e=>{e.exports=JSON.parse('{"description":"","props":{"bsPrefix":{"type":{"name":"string"},"required":false,"description":"","doclets":{"default":"\'modal\'"}},"size":{"type":{"name":"string"},"required":false,"description":"Render a large, extra large or small modal.\\nWhen not provided, the modal is rendered with medium (default) size.","doclets":{"type":"(\'sm\'|\'lg\'|\'xl\')"}},"fullscreen":{"type":{"name":"union","value":[{"name":"bool"},{"name":"string"}]},"required":false,"description":"Renders a fullscreen modal. Specifying a breakpoint will render the modal\\nas fullscreen __below__ the breakpoint size.","doclets":{"type":"(true|\'sm-down\'|\'md-down\'|\'lg-down\'|\'xl-down\'|\'xxl-down\')"}},"centered":{"type":{"name":"bool"},"required":false,"description":"vertically center the Dialog in the window","doclets":{}},"backdrop":{"type":{"name":"enum","value":[{"value":"\'static\'","computed":false},{"value":"true","computed":false},{"value":"false","computed":false}]},"required":false,"description":"Include a backdrop component. Specify \'static\' for a backdrop that doesn\'t\\ntrigger an \\"onHide\\" when clicked.","defaultValue":{"value":"true","computed":false},"doclets":{}},"backdropClassName":{"type":{"name":"string"},"required":false,"description":"Add an optional extra class name to .modal-backdrop\\nIt could end up looking like class=\\"modal-backdrop foo-modal-backdrop in\\".","doclets":{}},"keyboard":{"type":{"name":"bool"},"required":false,"description":"Close the modal when escape key is pressed","defaultValue":{"value":"true","computed":false},"doclets":{}},"scrollable":{"type":{"name":"bool"},"required":false,"description":"Allows scrolling the `<Modal.Body>` instead of the entire Modal when overflowing.","doclets":{}},"animation":{"type":{"name":"bool"},"required":false,"description":"Open and close the Modal with a slide and fade animation.","defaultValue":{"value":"true","computed":false},"doclets":{}},"dialogClassName":{"type":{"name":"string"},"required":false,"description":"A css class to apply to the Modal dialog DOM node.","doclets":{}},"contentClassName":{"type":{"name":"string"},"required":false,"description":"Add an optional extra class name to .modal-content","doclets":{}},"dialogAs":{"type":{"name":"elementType"},"required":false,"description":"A Component type that provides the modal content Markup. This is a useful\\nprop when you want to use your own styles and markup to create a custom\\nmodal component.","defaultValue":{"value":"ModalDialog","computed":true},"doclets":{}},"autoFocus":{"type":{"name":"bool"},"required":false,"description":"When `true` The modal will automatically shift focus to itself when it\\nopens, and replace it to the last focused element when it closes.\\nGenerally this should never be set to false as it makes the Modal less\\naccessible to assistive technologies, like screen-readers.","defaultValue":{"value":"true","computed":false},"doclets":{}},"enforceFocus":{"type":{"name":"bool"},"required":false,"description":"When `true` The modal will prevent focus from leaving the Modal while\\nopen. Consider leaving the default value here, as it is necessary to make\\nthe Modal work well with assistive technologies, such as screen readers.","defaultValue":{"value":"true","computed":false},"doclets":{}},"restoreFocus":{"type":{"name":"bool"},"required":false,"description":"When `true` The modal will restore focus to previously focused element once\\nmodal is hidden","defaultValue":{"value":"true","computed":false},"doclets":{}},"restoreFocusOptions":{"type":{"name":"shape","value":{"preventScroll":{"name":"bool","required":false}}},"required":false,"description":"Options passed to focus function when `restoreFocus` is set to `true`","doclets":{"link":" https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters"}},"show":{"type":{"name":"bool"},"required":false,"description":"When `true` The modal will show itself.","defaultValue":{"value":"false","computed":false},"doclets":{}},"onShow":{"type":{"name":"func"},"required":false,"description":"A callback fired when the Modal is opening.","doclets":{}},"onHide":{"type":{"name":"func"},"required":false,"description":"A callback fired when the header closeButton or non-static backdrop is\\nclicked. Required if either are specified.","doclets":{}},"onEscapeKeyDown":{"type":{"name":"func"},"required":false,"description":"A callback fired when the escape key, if specified in `keyboard`, is pressed.","doclets":{}},"onEnter":{"type":{"name":"func"},"required":false,"description":"Callback fired before the Modal transitions in","doclets":{}},"onEntering":{"type":{"name":"func"},"required":false,"description":"Callback fired as the Modal begins to transition in","doclets":{}},"onEntered":{"type":{"name":"func"},"required":false,"description":"Callback fired after the Modal finishes transitioning in","doclets":{}},"onExit":{"type":{"name":"func"},"required":false,"description":"Callback fired right before the Modal transitions out","doclets":{}},"onExiting":{"type":{"name":"func"},"required":false,"description":"Callback fired as the Modal begins to transition out","doclets":{}},"onExited":{"type":{"name":"func"},"required":false,"description":"Callback fired after the Modal finishes transitioning out","doclets":{}},"manager":{"type":{"name":"object"},"required":false,"description":"A ModalManager instance used to track and manage the state of open\\nModals. Useful when customizing how modals interact within a container","doclets":{}},"container":{"type":{"name":"any"},"required":false,"description":"","doclets":{"private":true}},"data-bs-theme":{"type":{"name":"string"},"required":false,"description":"","doclets":{}},"aria-labelledby":{"type":{"name":"string"},"required":false,"description":"","doclets":{}},"aria-describedby":{"type":{"name":"string"},"required":false,"description":"","doclets":{}},"aria-label":{"type":{"name":"string"},"required":false,"description":"","doclets":{}}}}')}}]);