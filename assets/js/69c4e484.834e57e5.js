"use strict";(self.webpackChunkreact_bootstrap_website=self.webpackChunkreact_bootstrap_website||[]).push([[7623],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>L});var o=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var p=o.createContext({}),l=function(t){var e=o.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=l(t.components);return o.createElement(p.Provider,{value:e},t.children)},m="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},c=o.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,p=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),m=l(n),c=i,L=m["".concat(p,".").concat(c)]||m[c]||d[c]||r;return n?o.createElement(L,a(a({ref:e},u),{},{components:n})):o.createElement(L,a({ref:e},u))}));function L(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,a=new Array(r);a[0]=c;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s[m]="string"==typeof t?t:i,a[1]=s;for(var l=2;l<r;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},28720:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>k,contentTitle:()=>v,default:()=>N,frontMatter:()=>f,metadata:()=>g,toc:()=>I});var o=n(87462),i=(n(67294),n(3905));const r="import ListGroup from 'react-bootstrap/ListGroup';\n\nfunction DefaultExample() {\n  return (\n    <ListGroup>\n      <ListGroup.Item>Cras justo odio</ListGroup.Item>\n      <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n      <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n      <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n      <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default DefaultExample;\n",a='import ListGroup from \'react-bootstrap/ListGroup\';\n\nfunction LinkedExample() {\n  const alertClicked = () => {\n    alert(\'You clicked the third ListGroupItem\');\n  };\n\n  return (\n    <ListGroup defaultActiveKey="#link1">\n      <ListGroup.Item action href="#link1">\n        Link 1\n      </ListGroup.Item>\n      <ListGroup.Item action href="#link2" disabled>\n        Link 2\n      </ListGroup.Item>\n      <ListGroup.Item action onClick={alertClicked}>\n        This one is a button\n      </ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default LinkedExample;\n',s='import ListGroup from \'react-bootstrap/ListGroup\';\n\nfunction ActiveExample() {\n  return (\n    <ListGroup as="ul">\n      <ListGroup.Item as="li" active>\n        Cras justo odio\n      </ListGroup.Item>\n      <ListGroup.Item as="li">Dapibus ac facilisis in</ListGroup.Item>\n      <ListGroup.Item as="li" disabled>\n        Morbi leo risus\n      </ListGroup.Item>\n      <ListGroup.Item as="li">Porta ac consectetur ac</ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default ActiveExample;\n',p="import ListGroup from 'react-bootstrap/ListGroup';\n\nfunction DisabledExample() {\n  return (\n    <ListGroup>\n      <ListGroup.Item disabled>Cras justo odio</ListGroup.Item>\n      <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n      <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n      <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default DisabledExample;\n",l='import ListGroup from \'react-bootstrap/ListGroup\';\n\nfunction StyleExample() {\n  return (\n    <ListGroup>\n      <ListGroup.Item>No style</ListGroup.Item>\n      <ListGroup.Item variant="primary">Primary</ListGroup.Item>\n      <ListGroup.Item variant="secondary">Secondary</ListGroup.Item>\n      <ListGroup.Item variant="success">Success</ListGroup.Item>\n      <ListGroup.Item variant="danger">Danger</ListGroup.Item>\n      <ListGroup.Item variant="warning">Warning</ListGroup.Item>\n      <ListGroup.Item variant="info">Info</ListGroup.Item>\n      <ListGroup.Item variant="light">Light</ListGroup.Item>\n      <ListGroup.Item variant="dark">Dark</ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default StyleExample;\n',u='import ListGroup from \'react-bootstrap/ListGroup\';\n\nfunction StyleActionsExample() {\n  return (\n    <ListGroup>\n      <ListGroup.Item>No style</ListGroup.Item>\n      <ListGroup.Item variant="primary">Primary</ListGroup.Item>\n      <ListGroup.Item action variant="secondary">\n        Secondary\n      </ListGroup.Item>\n      <ListGroup.Item action variant="success">\n        Success\n      </ListGroup.Item>\n      <ListGroup.Item action variant="danger">\n        Danger\n      </ListGroup.Item>\n      <ListGroup.Item action variant="warning">\n        Warning\n      </ListGroup.Item>\n      <ListGroup.Item action variant="info">\n        Info\n      </ListGroup.Item>\n      <ListGroup.Item action variant="light">\n        Light\n      </ListGroup.Item>\n      <ListGroup.Item action variant="dark">\n        Dark\n      </ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default StyleActionsExample;\n',m="import ListGroup from 'react-bootstrap/ListGroup';\n\nfunction FlushExample() {\n  return (\n    <ListGroup variant=\"flush\">\n      <ListGroup.Item>Cras justo odio</ListGroup.Item>\n      <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n      <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n      <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default FlushExample;\n",d='import ListGroup from \'react-bootstrap/ListGroup\';\n\nfunction NumberedExample() {\n  return (\n    <ListGroup as="ol" numbered>\n      <ListGroup.Item as="li">Cras justo odio</ListGroup.Item>\n      <ListGroup.Item as="li">Cras justo odio</ListGroup.Item>\n      <ListGroup.Item as="li">Cras justo odio</ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default NumberedExample;\n',c='import Badge from \'react-bootstrap/Badge\';\nimport ListGroup from \'react-bootstrap/ListGroup\';\n\nfunction DefaultExample() {\n  return (\n    <ListGroup as="ol" numbered>\n      <ListGroup.Item\n        as="li"\n        className="d-flex justify-content-between align-items-start"\n      >\n        <div className="ms-2 me-auto">\n          <div className="fw-bold">Subheading</div>\n          Cras justo odio\n        </div>\n        <Badge bg="primary" pill>\n          14\n        </Badge>\n      </ListGroup.Item>\n      <ListGroup.Item\n        as="li"\n        className="d-flex justify-content-between align-items-start"\n      >\n        <div className="ms-2 me-auto">\n          <div className="fw-bold">Subheading</div>\n          Cras justo odio\n        </div>\n        <Badge bg="primary" pill>\n          14\n        </Badge>\n      </ListGroup.Item>\n      <ListGroup.Item\n        as="li"\n        className="d-flex justify-content-between align-items-start"\n      >\n        <div className="ms-2 me-auto">\n          <div className="fw-bold">Subheading</div>\n          Cras justo odio\n        </div>\n        <Badge bg="primary" pill>\n          14\n        </Badge>\n      </ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default DefaultExample;\n',L="import ListGroup from 'react-bootstrap/ListGroup';\n\nfunction HorizontalExample() {\n  return (\n    <ListGroup horizontal>\n      <ListGroup.Item>This</ListGroup.Item>\n      <ListGroup.Item>ListGroup</ListGroup.Item>\n      <ListGroup.Item>renders</ListGroup.Item>\n      <ListGroup.Item>horizontally!</ListGroup.Item>\n    </ListGroup>\n  );\n}\n\nexport default HorizontalExample;\n",G="import ListGroup from 'react-bootstrap/ListGroup';\n\nfunction HorizontalResponsiveExample() {\n  return (\n    <>\n      {['sm', 'md', 'lg', 'xl', 'xxl'].map((breakpoint) => (\n        <ListGroup key={breakpoint} horizontal={breakpoint} className=\"my-2\">\n          <ListGroup.Item>This ListGroup</ListGroup.Item>\n          <ListGroup.Item>renders horizontally</ListGroup.Item>\n          <ListGroup.Item>on {breakpoint}</ListGroup.Item>\n          <ListGroup.Item>and above!</ListGroup.Item>\n        </ListGroup>\n      ))}\n    </>\n  );\n}\n\nexport default HorizontalResponsiveExample;\n",b='import Col from \'react-bootstrap/Col\';\nimport ListGroup from \'react-bootstrap/ListGroup\';\nimport Row from \'react-bootstrap/Row\';\nimport Tab from \'react-bootstrap/Tab\';\n\nfunction TabsExample() {\n  return (\n    <Tab.Container id="list-group-tabs-example" defaultActiveKey="#link1">\n      <Row>\n        <Col sm={4}>\n          <ListGroup>\n            <ListGroup.Item action href="#link1">\n              Link 1\n            </ListGroup.Item>\n            <ListGroup.Item action href="#link2">\n              Link 2\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col sm={8}>\n          <Tab.Content>\n            <Tab.Pane eventKey="#link1">Tab pane content 1</Tab.Pane>\n            <Tab.Pane eventKey="#link2">Tab pane content 2</Tab.Pane>\n          </Tab.Content>\n        </Col>\n      </Row>\n    </Tab.Container>\n  );\n}\n\nexport default TabsExample;\n',f={title:"List groups",description:"List groups are a flexible and powerful component for displaying a series of content. Modify and extend them to support just about any content within."},v=void 0,g={unversionedId:"components/list-group",id:"components/list-group",title:"List groups",description:"List groups are a flexible and powerful component for displaying a series of content. Modify and extend them to support just about any content within.",source:"@site/docs/components/list-group.mdx",sourceDirName:"components",slug:"/components/list-group",permalink:"/docs/components/list-group",draft:!1,tags:[],version:"current",frontMatter:{title:"List groups",description:"List groups are a flexible and powerful component for displaying a series of content. Modify and extend them to support just about any content within."},sidebar:"sidebar",previous:{title:"Images",permalink:"/docs/components/images"},next:{title:"Modals",permalink:"/docs/components/modal"}},k={},I=[{value:"Basic Example",id:"basic-example",level:2},{value:"Active items",id:"active-items",level:3},{value:"Disabled items",id:"disabled-items",level:3},{value:"Actionable items",id:"actionable-items",level:3},{value:"Flush",id:"flush",level:3},{value:"Numbered",id:"numbered",level:3},{value:"Horizontal",id:"horizontal",level:3},{value:"Contextual classes",id:"contextual-classes",level:3},{value:"Tabbed Interfaces",id:"tabbed-interfaces",level:2},{value:"API",id:"api",level:2},{value:"ListGroup",id:"listgroup",level:3},{value:"ListGroupItem",id:"listgroupitem",level:3}],h=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)},y=h("CodeBlock"),x=h("PropsTable"),C={toc:I},w="wrapper";function N(t){let{components:e,...n}=t;return(0,i.kt)(w,(0,o.Z)({},C,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"basic-example"},"Basic Example"),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},r),(0,i.kt)("h3",{id:"active-items"},"Active items"),(0,i.kt)("p",null,"Set the ",(0,i.kt)("inlineCode",{parentName:"p"},"active")," prop to indicate the list groups current active selection."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},s),(0,i.kt)("h3",{id:"disabled-items"},"Disabled items"),(0,i.kt)("p",null,"Set the ",(0,i.kt)("inlineCode",{parentName:"p"},"disabled")," prop to prevent actions on a ",(0,i.kt)("inlineCode",{parentName:"p"},"<ListGroup.Item>"),". For elements\nthat aren't naturally disable-able (like anchors) ",(0,i.kt)("inlineCode",{parentName:"p"},"onClick")," handlers are added\nthat call ",(0,i.kt)("inlineCode",{parentName:"p"},"preventDefault")," to mimick disabled behavior."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},p),(0,i.kt)("h3",{id:"actionable-items"},"Actionable items"),(0,i.kt)("p",null,"Toggle the ",(0,i.kt)("inlineCode",{parentName:"p"},"action")," prop to create ",(0,i.kt)("em",null,"actionable")," list group\nitems, with disabled, hover and active styles. List item actions will render\na ",(0,i.kt)("inlineCode",{parentName:"p"},"<button>")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"<a>")," (depending on the presence of an ",(0,i.kt)("inlineCode",{parentName:"p"},"href"),") by default but\ncan be overridden by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"as")," prop as usual."),(0,i.kt)("p",null,"List items ",(0,i.kt)("inlineCode",{parentName:"p"},"actions")," are distinct from plain items to ensure that click or tap\naffordances aren't applied to non-interactive items."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},a),(0,i.kt)("h3",{id:"flush"},"Flush"),(0,i.kt)("p",null,"Add the ",(0,i.kt)("inlineCode",{parentName:"p"},"flush")," variant to remove outer borders and rounded corners to render list group items\nedge-to-edge in a parent container ",(0,i.kt)("a",{parentName:"p",href:"cards#list-groups"},"such as a ",(0,i.kt)("inlineCode",{parentName:"a"},"Card")),"."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},m),(0,i.kt)("h3",{id:"numbered"},"Numbered"),(0,i.kt)("p",null,"Add the ",(0,i.kt)("inlineCode",{parentName:"p"},"numbered")," prop to opt into numbered list group items. Numbers are generated via CSS\n(as opposed to a ",(0,i.kt)("inlineCode",{parentName:"p"},"<ol>"),"s default browser styling) for better placement inside list group items\nand to allow for better customization."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},d),(0,i.kt)("p",null,"These work great with custom content as well."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},c),(0,i.kt)("h3",{id:"horizontal"},"Horizontal"),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"horizontal")," prop to make the ListGroup render horizontally. Currently ",(0,i.kt)("strong",{parentName:"p"},"horizontal list groups cannot be combined with flush list groups.")),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},L),(0,i.kt)("p",null,"There are responsive variants to ",(0,i.kt)("inlineCode",{parentName:"p"},"horizontal"),": setting it to ",(0,i.kt)("inlineCode",{parentName:"p"},"{sm|md|lg|xl|xxl}")," makes the list group horizontal starting at that breakpoint\u2019s ",(0,i.kt)("inlineCode",{parentName:"p"},"min-width"),"."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},G),(0,i.kt)("h3",{id:"contextual-classes"},"Contextual classes"),(0,i.kt)("p",null,"Use contextual variants on ",(0,i.kt)("inlineCode",{parentName:"p"},"<ListGroup.Item>"),"s to style them with a stateful background and color."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},l),(0,i.kt)("p",null,"When paired with ",(0,i.kt)("inlineCode",{parentName:"p"},"action"),"s, additional hover and active styles apply."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},u),(0,i.kt)("admonition",{title:"Conveying meaning to assistive technologies",type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Using color to add meaning only provides a visual indication, which will not\nbe conveyed to users of assistive technologies \u2013 such as screen readers.\nEnsure that information denoted by the color is either obvious from the\ncontent itself (e.g. the visible text), or is included through alternative\nmeans, such as additional text hidden with the ",(0,i.kt)("inlineCode",{parentName:"p"},".visually-hidden"),"\nclass.")),(0,i.kt)("h2",{id:"tabbed-interfaces"},"Tabbed Interfaces"),(0,i.kt)("p",null,"You can also use the ","[Tab][tabs]"," components to create ARIA compliant tabbable\ninterfaces with the ",(0,i.kt)("inlineCode",{parentName:"p"},"<ListGroup>")," component. Swap out the ",(0,i.kt)("inlineCode",{parentName:"p"},"<Nav>")," component\nfor the list group and you are good to go."),(0,i.kt)(y,{language:"jsx",live:!0,previewClassName:"list-group",mdxType:"CodeBlock"},b),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("h3",{id:"listgroup"},"ListGroup"),(0,i.kt)(x,{name:"ListGroup",mdxType:"PropsTable"}),(0,i.kt)("h3",{id:"listgroupitem"},"ListGroupItem"),(0,i.kt)(x,{name:"ListGroupItem",mdxType:"PropsTable"}))}N.isMDXComponent=!0}}]);